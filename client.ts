/*
Expense Reports

API Documentation

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AnnouncementApi,
  AuthenticationApi,
  CandidatesApi,
  CustomFieldsApi,
  DependentsApi,
  DocumentLibraryApi,
  ExpenseReportsApi,
  FeedbackApi,
  FormsApi,
  GoalsApi,
  InvoiceApi,
  JobProfilesApi,
  LeavesApi,
  ObjectiveApi,
  OrgUnitsApi,
  OrgRelationApi,
  PayStubsApi,
  PeopleAndPermissionsApi,
  PerformanceReviewApi,
  PerformanceReviewAssignmentApi,
  PositionsApi,
  ProjectApi,
  ReportsApi,
  ShiftsApi,
  SkillsApi,
  SurveyApi,
  TestApi,
  TimecardsApi,
  TimesheetsApi,
  TrainingsApi,
  UserPtoPoliciesApi,
  UserWorkflowApi,
  WorkflowsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { ClayHrCustom } from "./client-custom";

export class ClayHr extends ClayHrCustom {
  readonly announcement: AnnouncementApi;
  readonly authentication: AuthenticationApi;
  readonly candidates: CandidatesApi;
  readonly customFields: CustomFieldsApi;
  readonly dependents: DependentsApi;
  readonly documentLibrary: DocumentLibraryApi;
  readonly expenseReports: ExpenseReportsApi;
  readonly feedback: FeedbackApi;
  readonly forms: FormsApi;
  readonly goals: GoalsApi;
  readonly invoice: InvoiceApi;
  readonly jobProfiles: JobProfilesApi;
  readonly leaves: LeavesApi;
  readonly objective: ObjectiveApi;
  readonly orgUnits: OrgUnitsApi;
  readonly orgRelation: OrgRelationApi;
  readonly payStubs: PayStubsApi;
  readonly peopleAndPermissions: PeopleAndPermissionsApi;
  readonly performanceReview: PerformanceReviewApi;
  readonly performanceReviewAssignment: PerformanceReviewAssignmentApi;
  readonly positions: PositionsApi;
  readonly project: ProjectApi;
  readonly reports: ReportsApi;
  readonly shifts: ShiftsApi;
  readonly skills: SkillsApi;
  readonly survey: SurveyApi;
  readonly test: TestApi;
  readonly timecards: TimecardsApi;
  readonly timesheets: TimesheetsApi;
  readonly trainings: TrainingsApi;
  readonly userPtoPolicies: UserPtoPoliciesApi;
  readonly userWorkflow: UserWorkflowApi;
  readonly workflows: WorkflowsApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.announcement = new AnnouncementApi(configuration);
    this.authentication = new AuthenticationApi(configuration);
    this.candidates = new CandidatesApi(configuration);
    this.customFields = new CustomFieldsApi(configuration);
    this.dependents = new DependentsApi(configuration);
    this.documentLibrary = new DocumentLibraryApi(configuration);
    this.expenseReports = new ExpenseReportsApi(configuration);
    this.feedback = new FeedbackApi(configuration);
    this.forms = new FormsApi(configuration);
    this.goals = new GoalsApi(configuration);
    this.invoice = new InvoiceApi(configuration);
    this.jobProfiles = new JobProfilesApi(configuration);
    this.leaves = new LeavesApi(configuration);
    this.objective = new ObjectiveApi(configuration);
    this.orgUnits = new OrgUnitsApi(configuration);
    this.orgRelation = new OrgRelationApi(configuration);
    this.payStubs = new PayStubsApi(configuration);
    this.peopleAndPermissions = new PeopleAndPermissionsApi(configuration);
    this.performanceReview = new PerformanceReviewApi(configuration);
    this.performanceReviewAssignment = new PerformanceReviewAssignmentApi(configuration);
    this.positions = new PositionsApi(configuration);
    this.project = new ProjectApi(configuration);
    this.reports = new ReportsApi(configuration);
    this.shifts = new ShiftsApi(configuration);
    this.skills = new SkillsApi(configuration);
    this.survey = new SurveyApi(configuration);
    this.test = new TestApi(configuration);
    this.timecards = new TimecardsApi(configuration);
    this.timesheets = new TimesheetsApi(configuration);
    this.trainings = new TrainingsApi(configuration);
    this.userPtoPolicies = new UserPtoPoliciesApi(configuration);
    this.userWorkflow = new UserWorkflowApi(configuration);
    this.workflows = new WorkflowsApi(configuration);
  }

}
